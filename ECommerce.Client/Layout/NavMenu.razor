@inject IShoppingCartService ShoppingCartService
@inject IProductDataService ProductDataService
@using ECommerce.Client.Auth
@using ECommerce.Client.Contracts
@using ECommerce.Client.Auth
@using ECommerce.Client.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject GlobalStateService globalStateService
@inject IShoppingCartService shoppingCartService

<nav class="navbar">
    <ul class="navbar-left-container">
        <NavLink class="navbar-option" href="/">Home</NavLink>
    </ul>

    <ul class="navbar-right-container">
        <CascadingAuthenticationState>
            <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                <Authorized>
                    <div class="navbar-admin-panel">
                        <button class="navbar-admin-panel-button">Admin Panel</button>
                        <div class="navbar-admin-panel-content">
                            <NavLink href="/category">Categories</NavLink>
                            <NavLink href="/manufacturer">Manufacturers</NavLink>
                            <NavLink href="/product">Products</NavLink>
                            <NavLink href="/adminorders">Orders</NavLink>
                        </div>
                    </div>
                    <NavLink class="navbar-option" href="/wishlist">Wishlist (@wishlistItemsCount)</NavLink>
                    <NavLink class="navbar-option shopping-cart" href="/cart">
                        @if (globalStateService.CartCountProperty > 0)
                        {
                            <span class="quantity">@globalStateService.CartCountProperty</span>
                        }
                    </NavLink>
                    <NavLink class="navbar-option" @onclick="OnLogout">Logout</NavLink>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="navbar-option" href="/login">Login</NavLink>
                </NotAuthorized>
            </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
        </CascadingAuthenticationState>
    </ul>
</nav>

@code {
    private int cartItemsCount = 0;
    private int wishlistItemsCount = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadWishlistItemsCount();
        await LoadCartItemsCount();

        globalStateService.OnChange += StateHasChanged;
        globalStateService.CartCountProperty = (await shoppingCartService.GetCartItems()).Count;

        StateHasChanged();
    }

    private async Task LoadWishlistItemsCount()
    {
        var allProducts = await ProductDataService.GetProductsAsync();

        wishlistItemsCount = allProducts.Count(product => product.Wishlist);

        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCartItemsCount();
        }
    }

    private async Task LoadCartItemsCount()
    {
        var cartItems = await ShoppingCartService.GetCartItems();
        cartItemsCount = cartItems.Sum(item => item.Quantity);
        StateHasChanged();
    }

    private void NavigateToWishlist()
    {
        navigationManager.NavigateTo("/wishlist");
    }

    private async void OnLogout()
    {
        try
        {
            await authStateProvider.Logout();
            navigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

}