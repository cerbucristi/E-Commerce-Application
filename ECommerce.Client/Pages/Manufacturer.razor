@page "/manufacturer"
@using ECommerce.Client.Contracts
@using ECommerce.Client.ViewModels
<div class="entity-list-container">
    <h1 class="entity-name">Manufacturers</h1>

    <div class="entity-add-container">
        <InputText
            class="entity-add"
            placeholder="✍️ Add Manufacturer"
            @bind-Value="@NewManufacturer.ManufacturerName"/>

        <button class="entity-add-button" @onclick="HandleAddNewManufacturer">+</button>
    </div>
    
    <ul class="entity-list">
        @foreach (var manufacturer in Manufacturers)
        {
            <li class="entity-list-item">
                <p class="entity-list-item-name">@manufacturer.ManufacturerName</p>
                <button class="entity-list-item-delete-button">❌</button>
            </li>
        }
    </ul>
</div>

@code {

    string error { get; set; } 

    private List<ManufacturerViewModel> Manufacturers = [];
    
    [SupplyParameterFromForm]
    private ManufacturerViewModel NewManufacturer { get; set; }

    [Inject]
    public IManufacturerDataService ManufacturerDataService { get; set; }

    protected override void OnInitialized() => NewManufacturer = new();
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Manufacturers = (await ManufacturerDataService.GetManufacturersAsync()).ToList();
        }
        catch (Exception e)
        {
            error = e.Message;
        }
    }

    private async void HandleAddNewManufacturer()
    {
        try
        {
            await ManufacturerDataService.CreateManufacturerAsync(NewManufacturer);
            Manufacturers.Add(NewManufacturer);
            NewManufacturer = new();
        }
        catch (Exception e)
        {
            error = e.Message;
        }
    } 
}