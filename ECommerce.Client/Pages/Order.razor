@page "/order"
@inject IShoppingCartService ShoppingCartService
@inject IOrderService OrderService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@using Blazored
@using Blazored.Modal
@using Blazored.Modal.Services
@using Blazored.Toast.Services
@using ECommerce.Client.ViewModels
@using ECommerce.Client.Services
@using ECommerce.Client.Contracts
@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Http.Json

<style>
    .mandatory::before {
        content: " *";
        color: red;
    }
</style>

<div>
    <h1>Order</h1>

    <div class="form-group">
        <label for="first-name">First Name<span class="mandatory"></span></label>
        <input type="text" class="form-control" id="first-name" @bind="FirstName" placeholder="Enter First Name" required />
    </div>

    <div class="form-group">
        <label for="last-name">Last Name<span class="mandatory"></span></label>
        <input type="text" class="form-control" id="last-name" @bind="LastName" placeholder="Enter Last Name" required />
    </div>

    <div class="form-group">
        <label for="address">Address<span class="mandatory"></span></label>
        <input type="text" class="form-control" id="address" @bind="Address" placeholder="Enter Address" required />
    </div>

    <div class="form-group">
        <label for="phone">Phone<span class="mandatory"></span></label>
        <input type="text" class="form-control" id="phone" @bind="PhoneNumber" placeholder="Enter Phone" required />
    </div>

    <div class="form-group">
        <label for="payment">Payment<span class="mandatory"></span></label>
        <select class="form-control" id="payment" @bind="PaymentMethod" required>
            <option value="" disabled selected>Select Payment Method</option>
            <option>cash</option>
            <option>card</option>
        </select>
    </div>

    <button type="button" class="btn btn-primary" @onclick="SubmitForm">Submit</button>
</div>




@code {
    private string FirstName { get; set; }
    private string LastName { get; set; }
    private string Address { get; set; }
    private string PhoneNumber { get; set; }
    private string PaymentMethod { get; set; }
    private List<CartItemViewModel> cartItems = new List<CartItemViewModel>();
    
    protected override async Task OnInitializedAsync()
    {
        cartItems = await ShoppingCartService.GetCartItems();
    }
    public async Task SubmitForm()
    {
        // Create an order object with the form data
        var order = new OrderViewModel
            {
                FirstName = FirstName,
                LastName = LastName,
                Address = Address,
                PhoneNumber = PhoneNumber,
                Payment = PaymentMethod,
                OrderItems = cartItems.Select(item => new OrderItemViewModel
                {
                    ProductId = item.ProductId,
                    Quantity = item.Quantity,
                    Price = item.Price,
                }).ToList(),
                TotalPrice = cartItems.Sum(item => item.Price * item.Quantity)
            };

        // Send the POST request to the server
        var success = await OrderService.PlaceOrder(order);

        // Show a toast message based on the result
        if (success.IsSuccess)
        {
            await ShoppingCartService.ClearCart();

            // Show the success modal
            

            // Redirect to the home page after 5 seconds
            await Task.Delay(5000);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            ToastService.ShowError("Failed to place the order. Please try again.");
        }

    }
}
